{"version":3,"sources":["src/index.js"],"names":["now","Date","day","getDay","hour","getHours","minutes","getMinutes","days","formatDay","timestamp","date","showForecast","response","forecast","data","daily","forecastElement","document","querySelector","forecastHTML","forEach","forecastDay","index","dt","weather","icon","Math","round","temp","max","min","innerHTML","changeCity","event","preventDefault","cityInput","city","value","searchCity","getForecast","coordinates","apiKey","apiUrl","lat","lon","axios","get","then","currentWeather","iconElement","name","main","humidity","wind","speed","setAttribute","description","celsiusTemp","coord","submitCity","location","position","coords","latitude","longitude","currentLocation","navigator","geolocation","getCurrentPosition","showFahrenheitTemp","fahrenheitTemp","celsiusLink","classList","remove","fahrenheitLink","add","tempElement","showCelsiusTemp","addEventListener","dateTime","search","showCurrentLocation"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["let now = new Date();\r\nlet day = now.getDay();\r\nlet hour = now.getHours();\r\nlet minutes = now.getMinutes();\r\n\r\nif (minutes < 10) {\r\n  minutes = `0${minutes}`;\r\n}\r\nif (hour < 10) {\r\n  hour = `0${hour}`;\r\n}\r\n\r\nlet days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nday = days[now.getDay()];\r\n\r\nfunction formatDay(timestamp) {\r\n  let date = new Date(timestamp * 1000);\r\n  let day = date.getDay();\r\n  let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  return days[day];\r\n}\r\n\r\nfunction showForecast(response) {\r\n  let forecast = response.data.daily;\r\n\r\n  let forecastElement = document.querySelector(\"#forecast\");\r\n\r\n  let forecastHTML = `<div class=\"row\">`;\r\n  let days = [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\"];\r\n  forecast.forEach(function (forecastDay, index) {\r\n    if (index < 6) {\r\n      forecastHTML =\r\n        forecastHTML +\r\n        `\r\n  <div class=\"col-2\">\r\n    <div class=\"forecast-date\">\r\n      ${formatDay(forecastDay.dt)}\r\n      </div>\r\n    <img\r\n      src=\"https://openweathermap.org/img/wn/${\r\n        forecastDay.weather[0].icon\r\n      }@2x.png\"\r\n      alt=\"Clear\"\r\n      id=\"icon\"\r\n      width=\"60\"\r\n    />\r\n    <div class=\"forecast-temp\">\r\n      <span class=\"forecast-temp-high\">\r\n        ${Math.round(forecastDay.temp.max)}°\r\n      </span>\r\n      <span class=\"forecast-temp-low\">\r\n        ${Math.round(forecastDay.temp.min)}°\r\n      </span>\r\n    </div>\r\n  </div>\r\n`;\r\n    }\r\n  });\r\n\r\n  forecastHTML = forecastHTML + `</div>`;\r\n\r\n  forecastElement.innerHTML = forecastHTML;\r\n}\r\n\r\nfunction changeCity(event) {\r\n  event.preventDefault();\r\n  let cityInput = document.querySelector(\"#input-city\");\r\n  let city = document.querySelector(\"h1\");\r\n  city.innerHTML = `${cityInput.value}`;\r\n  searchCity(city);\r\n}\r\n\r\nfunction getForecast(coordinates) {\r\n  let apiKey = \"a43564c91a6c605aeb564c9ed02e3858\";\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.lat}&lon=${coordinates.lon}&appid=${apiKey}&units=metric`;\r\n\r\n  axios.get(apiUrl).then(showForecast);\r\n}\r\n\r\nfunction currentWeather(response) {\r\n  let iconElement = document.querySelector(\"#icon\");\r\n\r\n  document.querySelector(\"#current-city\").innerHTML = response.data.name;\r\n  document.querySelector(\"#current-temp\").innerHTML = Math.round(\r\n    response.data.main.temp\r\n  );\r\n  document.querySelector(\"#humidity\").innerHTML = response.data.main.humidity;\r\n  document.querySelector(\"#wind\").innerHTML = Math.round(\r\n    response.data.wind.speed\r\n  );\r\n  document.querySelector(\"#description\").innerHTML =\r\n    response.data.weather[0].main;\r\n\r\n  iconElement.setAttribute(\r\n    \"src\",\r\n    `https://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\r\n  );\r\n\r\n  iconElement.setAttribute(\"alt\", response.data.weather[0].description);\r\n\r\n  celsiusTemp = response.data.main.temp;\r\n\r\n  getForecast(response.data.coord);\r\n}\r\n\r\nfunction searchCity(city) {\r\n  let apiKey = \"82d3803539a315ccbf8af1fb1b70dcc6\";\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n  axios.get(apiUrl).then(currentWeather);\r\n}\r\n\r\nfunction submitCity(event) {\r\n  event.preventDefault();\r\n  let city = document.querySelector(\"#input-city\").value;\r\n  searchCity(city);\r\n}\r\n\r\nfunction location(position) {\r\n  let apiKey = \"82d3803539a315ccbf8af1fb1b70dcc6\";\r\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}&units=metric`;\r\n\r\n  axios.get(apiUrl).then(currentWeather);\r\n}\r\n\r\nfunction currentLocation(event) {\r\n  event.preventDefault();\r\n  navigator.geolocation.getCurrentPosition(location);\r\n}\r\n\r\nfunction showFahrenheitTemp(event) {\r\n  event.preventDefault();\r\n  let fahrenheitTemp = (celsiusTemp * 9) / 5 + 32;\r\n  celsiusLink.classList.remove(\"active\");\r\n  fahrenheitLink.classList.add(\"active\");\r\n  let tempElement = document.querySelector(\"#current-temp\");\r\n  tempElement.innerHTML = Math.round(fahrenheitTemp);\r\n}\r\n\r\nfunction showCelsiusTemp(event) {\r\n  event.preventDefault();\r\n  celsiusLink.classList.add(\"active\");\r\n  fahrenheitLink.classList.remove(\"active\");\r\n  let tempElement = document.querySelector(\"#current-temp\");\r\n  tempElement.innerHTML = Math.round(celsiusTemp);\r\n}\r\n\r\nlet city = document.querySelector(\"#enter-city\");\r\ncity.addEventListener(\"submit\", changeCity);\r\n\r\nlet dateTime = document.querySelector(\"h2\");\r\ndateTime.innerHTML = `${day} ${hour}:${minutes}`;\r\n\r\nlet search = document.querySelector(\"#enter-city\");\r\nsearch.addEventListener(\"submit\", submitCity);\r\n\r\nlet showCurrentLocation = document.querySelector(\"#current-info\");\r\nshowCurrentLocation.addEventListener(\"click\", currentLocation);\r\n\r\nlet celsiusTemp = null;\r\n\r\nlet fahrenheitLink = document.querySelector(\"#fahrenheit-link\");\r\nfahrenheitLink.addEventListener(\"click\", showFahrenheitTemp);\r\n\r\nlet celsiusLink = document.querySelector(\"#celsius-link\");\r\ncelsiusLink.addEventListener(\"click\", showCelsiusTemp);\r\n\r\nsearchCity(\"Waterloo\");\r\n\r\nshowForecast();\r\n"]}